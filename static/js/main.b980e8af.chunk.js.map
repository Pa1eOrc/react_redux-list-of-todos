{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","value","startFilter","query","status","filterReducer","filter","initialTodos","initialQuery","todos","todosFilter","title","toLowerCase","includes","todosReducer","filteredTodos","completed","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","id","dispatch","useState","isSelectedTodo","setIsSelectedTodo","useEffect","currentTodoActions","className","classNames","onClick","TodoList","todosActions","length","map","TodoFilter","isQuery","setIsQuery","isStatus","setIsStatus","filterActions","onSubmit","event","preventDefault","onChange","e","option","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","userId","isLoading","setIsLoading","user","setUser","getUser","catch","console","log","finally","href","email","name","App","setTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b980e8af.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (state: State = null, action: Action): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type AllAction = { type: 'filter/ALL', payload: string };\ntype ActiveAction = { type: 'filter/ACTIVE', payload: string };\ntype CompletedAction = { type: 'filter/COMPLETED', payload: string };\ntype QueryAction = { type: 'filter/QUERY', payload: string };\ntype ResetQueryAction = { type: 'filter/RESET' };\n\ntype Actions = AllAction\n| ActiveAction\n| CompletedAction\n| QueryAction\n| ResetQueryAction;\n\nconst all = (value: string): AllAction => (\n  { type: 'filter/ALL', payload: value });\nconst active = (value: string): ActiveAction => (\n  { type: 'filter/ACTIVE', payload: value });\nconst completed = (value: string): CompletedAction => (\n  { type: 'filter/COMPLETED', payload: value });\nconst query = (value: string): QueryAction => (\n  { type: 'filter/QUERY', payload: value });\nconst resetQuery = (): ResetQueryAction => ({ type: 'filter/RESET' });\n\nexport const actions = {\n  all,\n  active,\n  completed,\n  query,\n  resetQuery,\n};\n\ntype Filter = {\n  query: string,\n  status: string,\n};\n\nconst startFilter = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (filter: Filter = startFilter, action: Actions) => {\n  switch (action.type) {\n    case 'filter/ALL':\n      return { ...filter, status: action.payload };\n\n    case 'filter/ACTIVE':\n      return { ...filter, status: action.payload };\n\n    case 'filter/COMPLETED':\n      return { ...filter, status: action.payload };\n\n    case 'filter/QUERY':\n      return { ...filter, query: action.payload };\n\n    case 'filter/RESET':\n      return { ...filter, query: startFilter.query };\n\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype TodosAllAction = {\n  type: 'todos/ALL', payload: { todos: Todo[], query: string }\n};\n\ntype TodosActiveAction = {\n  type: 'todos/ACTIVE', payload: { todos: Todo[], query: string }\n};\n\ntype TodosCompletedAction = {\n  type: 'todos/COMPLETED', payload: { todos: Todo[], query: string }\n};\n\ntype Actions = TodosAllAction\n| TodosActiveAction\n| TodosCompletedAction;\n\nconst all = (initialTodos: Todo[], initialQuery: string): TodosAllAction => ({\n  type: 'todos/ALL',\n  payload: { todos: initialTodos, query: initialQuery },\n});\n\nconst active = (\n  initialTodos: Todo[], initialQuery: string,\n): TodosActiveAction => ({\n  type: 'todos/ACTIVE',\n  payload: { todos: initialTodos, query: initialQuery },\n});\n\nconst completed = (\n  initialTodos: Todo[], initialQuery: string,\n): TodosCompletedAction => ({\n  type: 'todos/COMPLETED',\n  payload: { todos: initialTodos, query: initialQuery },\n});\n\nexport const actions = { all, active, completed };\n\nconst todosFilter = (todos: Todo[], query: string): Todo[] => {\n  if (query) {\n    return todos.filter(todo => todo.title.toLowerCase(\n    ).includes(query.toLowerCase()));\n  }\n\n  return todos;\n};\n\nconst todosReducer = (filteredTodos: Todo[] = [], action: Actions): Todo[] => {\n  const { todos = [], query } = action.payload || {};\n\n  switch (action.type) {\n    case 'todos/ALL':\n      return todosFilter(todos, query);\n\n    case 'todos/ACTIVE':\n      return todosFilter(todos.filter(todo => !todo.completed), query);\n\n    case 'todos/COMPLETED':\n      return todosFilter(todos.filter(todo => todo.completed), query);\n\n    default:\n      return filteredTodos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isSelectedTodo, setIsSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    if (isSelectedTodo) {\n      dispatch(currentTodoActions.setTodo(isSelectedTodo));\n    }\n  }, [isSelectedTodo]);\n\n  useEffect(() => {\n    if (!currentTodo) {\n      setIsSelectedTodo(null);\n    }\n  }, [currentTodo]);\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': isSelectedTodo,\n      })}\n      key={todo.id}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      {completed ? (\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n      ) : (\n        <td className=\"is-vcentered\" />\n      )}\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-success': completed,\n          'has-text-danger': !completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          title=\"Select todo\"\n          onClick={() => setIsSelectedTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames({\n              'far fa-eye-slash': isSelectedTodo,\n              'far fa-eye': !isSelectedTodo,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as todosActions } from '../../features/todos';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const dispatch = useAppDispatch();\n  const filteredTodos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n\n  useEffect(() => {\n    if (status === 'all') {\n      dispatch(todosActions.all(todos, query));\n    }\n\n    if (status === 'active') {\n      dispatch(todosActions.active(todos, query));\n    }\n\n    if (status === 'completed') {\n      dispatch(todosActions.completed(todos, query));\n    }\n  }, [status, query, todos]);\n\n  return (\n    <>\n      {filteredTodos.length === 0 ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredTodos.map(todo => (\n              <TodoItem\n                todo={todo}\n                key={todo.id}\n              />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [isQuery, setIsQuery] = useState('');\n  const [isStatus, setIsStatus] = useState<Status>('all');\n\n  const handleStatusChange = (option: string) => {\n    setIsStatus(option as Status);\n  };\n\n  useEffect(() => {\n    if (isStatus === 'all') {\n      dispatch(filterActions.all(isStatus));\n    }\n\n    if (isStatus === 'active') {\n      dispatch(filterActions.active(isStatus));\n    }\n\n    if (isStatus === 'completed') {\n      dispatch(filterActions.completed(isStatus));\n    }\n  }, [isStatus]);\n\n  useEffect(() => {\n    if (isQuery) {\n      dispatch(filterActions.query(isQuery));\n    }\n\n    return () => {\n      dispatch(filterActions.query(''));\n    };\n  }, [isQuery]);\n\n  const clearQuery = () => {\n    dispatch(filterActions.resetQuery());\n    setIsQuery('');\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            title=\"select\"\n            value={isStatus}\n            onChange={(e) => handleStatusChange(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={isQuery}\n          onChange={e => setIsQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {isQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              title=\"delete\"\n              onClick={clearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    userId,\n    completed,\n  } = todo;\n  const dispatch = useAppDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if (userId) {\n      setIsLoading(true);\n\n      getUser(userId).then(setUser)\n        .catch((e) => {\n          // eslint-disable-next-line no-console\n          console.log('Somethimg went wrong', e);\n        })\n        .finally(() => setIsLoading(false));\n    }\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              title=\"delete\"\n              onClick={() => dispatch(currentTodoActions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!completed ? (\n                <strong className=\"has-text-danger\">Planned</strong>\n              ) : (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n\n              {' by '}\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos().then(setTodos)\n      .catch((e) => {\n        // eslint-disable-next-line no-console\n        console.log('Somethimg went wrong', e);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todos}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal todo={currentTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}